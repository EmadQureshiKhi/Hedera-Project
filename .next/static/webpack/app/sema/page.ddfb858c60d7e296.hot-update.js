"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/sema/page",{

/***/ "(app-pages-browser)/./src/components/sema/sema-context.tsx":
/*!**********************************************!*\
  !*** ./src/components/sema/sema-context.tsx ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SemaProvider: function() { return /* binding */ SemaProvider; },\n/* harmony export */   useSema: function() { return /* binding */ useSema; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/supabase */ \"(app-pages-browser)/./src/lib/supabase.ts\");\n/* harmony import */ var _hooks_use_auth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/hooks/use-auth */ \"(app-pages-browser)/./src/hooks/use-auth.ts\");\n/* __next_internal_client_entry_do_not_use__ SemaProvider,useSema auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\nconst SemaContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction SemaProvider(param) {\n    let { children } = param;\n    _s();\n    const { user } = (0,_hooks_use_auth__WEBPACK_IMPORTED_MODULE_3__.useAuth)();\n    const [clients, setClients] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [activeClient, setActiveClient] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [stakeholders, setStakeholders] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [sampleParameters, setSampleParameters] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [materialTopics, setMaterialTopics] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [internalTopics, setInternalTopics] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [questionnaireResponses, setQuestionnaireResponses] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [reports, setReports] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    // Load clients on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (user) {\n            loadClients();\n        }\n    }, [\n        user\n    ]);\n    // Load data when active client changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (activeClient) {\n            refreshData();\n        }\n    }, [\n        activeClient\n    ]);\n    const loadClients = async ()=>{\n        if (!user) return;\n        console.log(\"Loading clients for user:\", user.id);\n        try {\n            const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from(\"sema_clients\").select(\"*\").eq(\"user_id\", user.id).order(\"created_at\", {\n                ascending: false\n            });\n            if (error) {\n                console.error(\"Error loading clients:\", error);\n                throw error;\n            }\n            console.log(\"Loaded clients:\", data);\n            setClients(data || []);\n            // Set demo client as active if no active client\n            if (!activeClient && (data === null || data === void 0 ? void 0 : data.length) > 0) {\n                const demoClient = data.find((c)=>c.status === \"demo\") || data[0];\n                setActiveClient(demoClient);\n            }\n        } catch (error) {\n            console.error(\"Error loading SEMA clients:\", error);\n        }\n    };\n    const addClient = async (clientData)=>{\n        if (!user) throw new Error(\"User not authenticated\");\n        // Ensure we're passing the user_id correctly\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from(\"sema_clients\").insert([\n            {\n                ...clientData,\n                user_id: user.id,\n                created_at: new Date().toISOString(),\n                updated_at: new Date().toISOString()\n            }\n        ]).select().single();\n        if (error) {\n            console.error(\"Supabase error:\", error);\n            throw new Error(\"Database error: \".concat(error.message));\n        }\n        setClients((prev)=>[\n                data,\n                ...prev\n            ]);\n        return data;\n    };\n    const updateClient = async (id, updates)=>{\n        const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from(\"sema_clients\").update({\n            ...updates,\n            updated_at: new Date().toISOString()\n        }).eq(\"id\", id);\n        if (error) throw error;\n        setClients((prev)=>prev.map((c)=>c.id === id ? {\n                    ...c,\n                    ...updates\n                } : c));\n        if ((activeClient === null || activeClient === void 0 ? void 0 : activeClient.id) === id) {\n            setActiveClient((prev)=>prev ? {\n                    ...prev,\n                    ...updates\n                } : null);\n        }\n    };\n    const deleteClient = async (id)=>{\n        // Don't allow deleting demo client\n        const client = clients.find((c)=>c.id === id);\n        if ((client === null || client === void 0 ? void 0 : client.status) === \"demo\") {\n            throw new Error(\"Cannot delete demo client\");\n        }\n        const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from(\"sema_clients\").delete().eq(\"id\", id);\n        if (error) throw error;\n        setClients((prev)=>prev.filter((c)=>c.id !== id));\n        if ((activeClient === null || activeClient === void 0 ? void 0 : activeClient.id) === id) {\n            setActiveClient(null);\n        }\n    };\n    const refreshData = async ()=>{\n        if (!activeClient) return;\n        setIsLoading(true);\n        try {\n            // Load all data for the active client\n            const [stakeholdersRes, sampleParamsRes, materialTopicsRes, internalTopicsRes, responsesRes, reportsRes] = await Promise.all([\n                _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from(\"sema_stakeholders\").select(\"*\").eq(\"client_id\", activeClient.id),\n                _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from(\"sema_sample_parameters\").select(\"*\").eq(\"client_id\", activeClient.id).single(),\n                _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from(\"sema_material_topics\").select(\"*\").eq(\"client_id\", activeClient.id),\n                _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from(\"sema_internal_topics\").select(\"*\").eq(\"client_id\", activeClient.id),\n                _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from(\"sema_questionnaire_responses\").select(\"*\").eq(\"topic_id\", activeClient.id),\n                _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from(\"sema_reports\").select(\"*\").eq(\"client_id\", activeClient.id)\n            ]);\n            setStakeholders(stakeholdersRes.data || []);\n            setSampleParameters(sampleParamsRes.data || null);\n            setMaterialTopics(materialTopicsRes.data || []);\n            setInternalTopics(internalTopicsRes.data || []);\n            setQuestionnaireResponses(responsesRes.data || []);\n            setReports(reportsRes.data || []);\n        } catch (error) {\n            console.error(\"Error refreshing SEMA data:\", error);\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(SemaContext.Provider, {\n        value: {\n            clients,\n            activeClient,\n            setActiveClient,\n            addClient,\n            updateClient,\n            deleteClient,\n            stakeholders,\n            sampleParameters,\n            materialTopics,\n            internalTopics,\n            questionnaireResponses,\n            reports,\n            refreshData,\n            isLoading\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/nokitha/Desktop/ALL MY PROJECTS/OMNIPLATFROM/src/components/sema/sema-context.tsx\",\n        lineNumber: 279,\n        columnNumber: 5\n    }, this);\n}\n_s(SemaProvider, \"X86N4fCwbEexc7mNi4SHFI1ovN8=\", false, function() {\n    return [\n        _hooks_use_auth__WEBPACK_IMPORTED_MODULE_3__.useAuth\n    ];\n});\n_c = SemaProvider;\nfunction useSema() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(SemaContext);\n    if (context === undefined) {\n        throw new Error(\"useSema must be used within a SemaProvider\");\n    }\n    return context;\n}\n_s1(useSema, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"SemaProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/sema/sema-context.tsx\n"));

/***/ })

});